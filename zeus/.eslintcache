[{"E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\index.js":"1","E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\App.jsx":"2","E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\components\\top\\TopSection.jsx":"3","E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\components\\bottom\\BottomSection.jsx":"4","E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\components\\top\\Weather.jsx":"5"},{"size":180,"mtime":1610275279104,"results":"6","hashOfConfig":"7"},{"size":2081,"mtime":1610733302757,"results":"8","hashOfConfig":"7"},{"size":3011,"mtime":1610732932017,"results":"9","hashOfConfig":"7"},{"size":337,"mtime":1610732932016,"results":"10","hashOfConfig":"7"},{"size":746,"mtime":1610712820011,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ukj1la",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\index.js",[],["25","26"],"E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\App.jsx",["27"],"E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\components\\top\\TopSection.jsx",["28"],"import React, { Component } from 'react';\r\nimport './TopSection.scss';\r\n\r\nimport Weather from './Weather';\r\nimport { Manager, Reference, Popper } from 'react-popper';\r\nexport default class TopSection extends Component {\r\n        constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n            isSelectLocationOpen: false\r\n          };\r\n        }\r\n\r\n        onToggleSelectLocation() {\r\n          this.setState(prevState => ({\r\n            isSelectLocationOpen: !prevState.isSelectLocationOpen\r\n          }));\r\n        }\r\n\r\n        onLocationNameChange(e) {\r\n          this.setState({\r\n            locationName: e.target.value\r\n          });\r\n        }\r\n\r\n        onSelectCity() {\r\n          const { locationName } = this.state;\r\n          const { eventEmitter } = this.props;\r\n          eventEmitter.emit(\"updateWeather\", locationName);\r\n          this.setState({ isSelectLocationOpen: false });\r\n        }\r\n\r\n        render() {\r\n          const { isSelectLocationOpen } = this.state;\r\n          const { eventEmitter } = this.props;\r\n\r\n          return (\r\n            <div className=\"top-container\">\r\n              <div className=\"title\">Weather Up</div>\r\n              <Weather {...this.props} />\r\n              <Manager>\r\n                <Reference>\r\n                  {({ ref }) => (\r\n                    <button\r\n                      className=\"btn btn-select-location\"\r\n                      ref={ref}\r\n                      onClick={this.onToggleSelectLocation.bind(this)}\r\n                    >\r\n                      Select Location\r\n                    </button>\r\n                  )}\r\n                </Reference>\r\n                <Popper placement=\"top\">\r\n                  {({ ref, style, placement, arrowProps }) =>\r\n                    isSelectLocationOpen && (\r\n                      <div\r\n                        className=\"popup-container\"\r\n                        ref={ref}\r\n                        style={style}\r\n                        data-placement={placement}\r\n                      >\r\n                        <div className=\"form-container\">\r\n                          <label htmlFor=\"location-name\">Location Name</label>\r\n                          <input\r\n                            id=\"location-name\"\r\n                            type=\"text\"\r\n                            placeholder=\"City Name\"\r\n                            onChange={this.onLocationNameChange.bind(this)}\r\n                          />\r\n                          <button\r\n                            className=\"btn btn-select-location\"\r\n                            onClick={this.onSelectCity.bind(this)}\r\n                          >\r\n                            Select\r\n                          </button>\r\n                        </div>\r\n                        <div ref={arrowProps.ref} style={arrowProps.style} />\r\n                      </div>\r\n                    )\r\n                  }\r\n                </Popper>\r\n              </Manager>\r\n            </div>\r\n          );\r\n        }\r\n      }","E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\components\\bottom\\BottomSection.jsx",[],"E:\\Projelerim\\MythologyOfReactJs\\zeus\\src\\components\\top\\Weather.jsx",["29","30","31"],"import React, { Component } from 'react'\r\nimport iconURL from '../../images/sun.png'\r\nexport default class Weather extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    render() {\r\n      const {location,temp_c, isDay, text, iconURL} =this.props;\r\n        return (\r\n            <div className=\"weather-container\">\r\n            <div className=\"header\">{location}</div>\r\n            <div className=\"inner-container\">\r\n              <div className=\"image\">\r\n                <img src={iconURL} />\r\n              </div>\r\n              <div className=\"current-weather\">{temp_c} Â°C</div>\r\n            </div>\r\n            <div className=\"footer\">{text}</div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":46,"column":34,"nodeType":"38","messageId":"39","endLine":46,"endColumn":42},{"ruleId":"36","severity":1,"message":"40","line":35,"column":19,"nodeType":"38","messageId":"39","endLine":35,"endColumn":31},{"ruleId":"36","severity":1,"message":"41","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":15},{"ruleId":"36","severity":1,"message":"42","line":10,"column":31,"nodeType":"38","messageId":"39","endLine":10,"endColumn":36},{"ruleId":"43","severity":1,"message":"44","line":16,"column":17,"nodeType":"45","endLine":16,"endColumn":38},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'eventEmitter' is assigned a value but never used.","'iconURL' is defined but never used.","'isDay' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]