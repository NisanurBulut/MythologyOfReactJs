[{"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\index.js":"1","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reportWebVitals.js":"2","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\App.js":"3","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\Store.js":"4","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\RootReducer.js":"5","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\MythListReducer.js":"6","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\actions\\MythActions.js":"7","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\MythItemReducer.js":"8","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\containers\\MythItem.js":"9","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\containers\\MythList\\MythList.js":"10"},{"size":707,"mtime":1612209918114,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":602,"mtime":1612541966638,"results":"14","hashOfConfig":"12"},{"size":320,"mtime":1612208818035,"results":"15","hashOfConfig":"12"},{"size":276,"mtime":1612261499795,"results":"16","hashOfConfig":"12"},{"size":721,"mtime":1612269349613,"results":"17","hashOfConfig":"12"},{"size":1188,"mtime":1612541712262,"results":"18","hashOfConfig":"12"},{"size":718,"mtime":1612269652199,"results":"19","hashOfConfig":"12"},{"size":1327,"mtime":1612271931939,"results":"20","hashOfConfig":"12"},{"size":2121,"mtime":1612542491684,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2wok03",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\index.js",[],["47","48"],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reportWebVitals.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\App.js",["49"],"import logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route, Redirect, NavLink } from 'react-router-dom';\nimport MythList from './containers/MythList/MythList';\nimport MythItem from './containers/MythItem';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"header\">\n        <NavLink to={\"/\"}><b>Search</b></NavLink>\n      </nav>\n      <Switch>\n        <Route path={'/'} exact component={MythList} />\n        <Route path={'/myth/:myth'} exact component={MythItem} />\n        <Redirect path={\"/\"}></Redirect>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\Store.js",["50"],"import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers/RootReducer';\r\nconst Store= createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default Store;","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\RootReducer.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\MythListReducer.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\actions\\MythActions.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\MythItemReducer.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\containers\\MythItem.js",["51"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetMyth } from '../actions/MythActions';\r\nimport _ from 'lodash';\r\n\r\nconst MythItem = (props) => {\r\n  const mythItemName = props.match.params.myth;\r\n  const dispathch = useDispatch();\r\n  const mythItemState = useSelector((state) => state.MythItem);\r\n\r\n  React.useEffect(() => {\r\n    dispathch(GetMyth(mythItemName));\r\n  }, []);\r\n\r\n  const showData = () => {\r\n    if (! _.isEmpty(mythItemState.data[mythItemName])) {\r\n      const mythItemData=mythItemState.data[mythItemName][0];\r\n      console.log(mythItemData);\r\n      return(\r\n        <div className={\"myth-wrapper\"}>\r\n          <div className=\"mythItemHeader\">\r\n           <h1>{mythItemName}</h1>\r\n          </div>\r\n          <div className={\"item\"}>\r\n            <img src={mythItemData.imagePath} alt=\"\"/>\r\n          </div>\r\n          <div className=\"item\">\r\n           <p>{mythItemData.description}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (mythItemState.loading) {\r\n      return <p>Loading...</p>\r\n    }\r\n\r\n    if (mythItemState.errorMessage !== \"\") {\r\n      return <p>{mythItemState.errorMessage}</p>\r\n    }\r\n\r\n    return <p>error getting myth item</p>\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showData()}\r\n    </div>\r\n  );\r\n};\r\nexport default MythItem;\r\n","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\containers\\MythList\\MythList.js",["52"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport _ from 'lodash';\r\nimport { GetMythList } from '../../actions/MythActions';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styledMythList from '../MythList/MythList.modules.css';\r\nconst MythList = (props) => {\r\n  const [search, setSearch]=useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const mythList = useSelector((state) => state.MythList);\r\n\r\n  React.useEffect(() => {\r\n    fetchData(1);\r\n  }, []);\r\n\r\n  const fetchData = (page = 1) => {\r\n    dispatch(GetMythList(page));\r\n  };\r\n\r\n  const showData = () => {\r\n    if (!_.isEmpty(mythList.data)) {\r\n      return (\r\n        <div className={styledMythList.listWrapper}>\r\n          <GridList cellHeight={160} className={styledMythList.gridList} cols={4}>\r\n        {mythList.data.map((item) => (\r\n          <GridListTile key={item.name} cols={1} className={styledMythList.mythItem}>\r\n            <p>{item.name}</p>\r\n            <Link to={`/myth/${item.name}`}>View</Link>\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n        </div>\r\n      );\r\n    }\r\n    if (mythList.loading) {\r\n      return <p>....Loading</p>;\r\n    }\r\n    if (mythList.errorMessage !== '') {\r\n      return <div>{mythList.errorMessage}</div>;\r\n    }\r\n    return <p>unable to data</p>;\r\n  };\r\n  return <div>\r\n    <div className=\"search-wrapper\">\r\n      <input type=\"text\" onChange={(e)=>setSearch(e.target.value)}/>\r\n      <button onClick={()=>props.history.push(`/myth/${search}`)}>Search</button>\r\n    </div>\r\n    {showData()}\r\n    {\r\n\r\n      !_.isEmpty(mythList.data) && (\r\n        <ReactPaginate\r\n          pageCount={Math.ceil(mythList.count / 10)}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={1}\r\n          onPageChange={(data) => fetchData(data.selected + 1)}\r\n          containerClassName={\"pagination\"}\r\n        ></ReactPaginate>\r\n      )\r\n    }\r\n    </div>;\r\n};\r\n\r\nexport default MythList;\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":1,"column":23,"nodeType":"59","messageId":"60","endLine":1,"endColumn":30},{"ruleId":"62","severity":1,"message":"63","line":13,"column":6,"nodeType":"64","endLine":13,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":17,"column":6,"nodeType":"64","endLine":17,"endColumn":8,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispathch' and 'mythItemName'. Either include them or remove the dependency array.","ArrayExpression",["70"],"React Hook React.useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [dispathch, mythItemName]",{"range":"76","text":"77"},"Update the dependencies array to be: [fetchData]",{"range":"78","text":"79"},[417,419],"[dispathch, mythItemName]",[667,669],"[fetchData]"]