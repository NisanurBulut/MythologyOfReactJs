[{"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\index.js":"1","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reportWebVitals.js":"2","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\App.js":"3","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\Store.js":"4","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\RootReducer.js":"5","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\MythListReducer.js":"6","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\actions\\MythActions.js":"7","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\MythItemReducer.js":"8","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\containers\\MythList\\MythList.js":"9","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\containers\\MythItem\\MythItem.js":"10"},{"size":707,"mtime":1612209918114,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":636,"mtime":1612602156589,"results":"14","hashOfConfig":"12"},{"size":320,"mtime":1612208818035,"results":"15","hashOfConfig":"12"},{"size":276,"mtime":1612261499795,"results":"16","hashOfConfig":"12"},{"size":721,"mtime":1612269349613,"results":"17","hashOfConfig":"12"},{"size":1187,"mtime":1612603968567,"results":"18","hashOfConfig":"12"},{"size":718,"mtime":1612269652199,"results":"19","hashOfConfig":"12"},{"size":3375,"mtime":1612604240610,"results":"20","hashOfConfig":"12"},{"size":1413,"mtime":1612602316249,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2wok03",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\index.js",[],["46","47"],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reportWebVitals.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\App.js",["48"],"import logo from './logo.svg';\nimport styledApp from './App.css';\nimport { Switch, Route, Redirect, NavLink } from 'react-router-dom';\nimport MythList from './containers/MythList/MythList';\nimport MythItem from './containers/MythItem/MythItem';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className={styledApp.header}>\n        <NavLink to={\"/\"}><b>Search</b></NavLink>\n      </nav>\n      <Switch>\n        <Route path={'/'} exact component={MythList} />\n        <Route path={'/myth/:myth'} exact component={MythItem} />\n        <Redirect path={\"/\"}></Redirect>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\Store.js",["49"],"import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers/RootReducer';\r\nconst Store= createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default Store;","E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\RootReducer.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\MythListReducer.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\actions\\MythActions.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\reducers\\MythItemReducer.js",[],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\containers\\MythList\\MythList.js",["50","51","52","53"],"E:\\Projelerim\\MythologyOfReactJs\\myth\\src\\containers\\MythItem\\MythItem.js",["54"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetMyth } from '../../actions/MythActions';\r\nimport styledMythItem from '../MythItem/MythItem.css';\r\nimport _ from 'lodash';\r\n\r\nconst MythItem = (props) => {\r\n  const mythItemName = props.match.params.myth;\r\n  const dispathch = useDispatch();\r\n  const mythItemState = useSelector((state) => state.MythItem);\r\n\r\n  React.useEffect(() => {\r\n    dispathch(GetMyth(mythItemName));\r\n  }, []);\r\n\r\n  const showData = () => {\r\n    if (! _.isEmpty(mythItemState.data[mythItemName])) {\r\n      const mythItemData=mythItemState.data[mythItemName][0];\r\n      console.log(mythItemData);\r\n      return(\r\n        <div className={styledMythItem.mythWrapper}>\r\n          <div className={styledMythItem.mythItemHeader}>\r\n           <h1>{mythItemName}</h1>\r\n          </div>\r\n          <div className={\"item\"}>\r\n            <img src={mythItemData.imagePath} alt=\"\"/>\r\n          </div>\r\n          <div className=\"item\">\r\n           <p>{mythItemData.description}</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (mythItemState.loading) {\r\n      return <p>Loading...</p>\r\n    }\r\n\r\n    if (mythItemState.errorMessage !== \"\") {\r\n      return <p>{mythItemState.errorMessage}</p>\r\n    }\r\n\r\n    return <p>error getting myth item</p>\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showData()}\r\n    </div>\r\n  );\r\n};\r\nexport default MythItem;\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":1,"column":23,"nodeType":"61","messageId":"62","endLine":1,"endColumn":30},{"ruleId":"59","severity":1,"message":"64","line":11,"column":10,"nodeType":"61","messageId":"62","endLine":11,"endColumn":20},{"ruleId":"59","severity":1,"message":"65","line":17,"column":8,"nodeType":"61","messageId":"62","endLine":17,"endColumn":14},{"ruleId":"59","severity":1,"message":"66","line":18,"column":8,"nodeType":"61","messageId":"62","endLine":18,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":27,"column":6,"nodeType":"69","endLine":27,"endColumn":8,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":14,"column":6,"nodeType":"69","endLine":14,"endColumn":8,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook React.useEffect has missing dependencies: 'dispathch' and 'mythItemName'. Either include them or remove the dependency array.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [fetchData]",{"range":"81","text":"82"},"Update the dependencies array to be: [dispathch, mythItemName]",{"range":"83","text":"84"},[1111,1113],"[fetchData]",[476,478],"[dispathch, mythItemName]"]